{"version":3,"sources":["hooks/useLocalStorage.tsx","utils/keyGenerator.tsx","utils/emptyInterfaces.tsx","reducers/RouterConfigReducer.tsx","context/ReactConfigContext.tsx","components/GenratedScript.tsx","utils/router2script.tsx","components/CheckBoxes.tsx","components/BasicRouterConfig.tsx","hooks/useForm.tsx","components/InputUseForm.tsx","components/DhcpConfig.tsx","components/Interface.tsx","hooks/useToggle.tsx","components/InterfaceConfig.tsx","components/RouterConfiguration.tsx","components/RouterConfigurationScreen.tsx","components/RouterApp.tsx","App.tsx","index.tsx"],"names":["useSessionStorage","key","defaultValue","useStorage","window","sessionStorage","storageObject","useState","jsonValue","getItem","JSON","parse","value","setValue","useEffect","undefined","removeItem","setItem","stringify","removeValue","useCallback","keyGeneratorFunc","i","toString","RouterItemConfigurable","emptyRouterConfiguration","hostname","interfaces","security","bannerMord","encription","lineConsole","vty","emptyRouterInterface","description","interfaceCableType","type","port","ipAddress","ipMask","dhcp","emptyDhcpConfiguration","defaultRouter","dnsServer","excluded","network","poolName","RouterConfigContext","createContext","routerConfig","dispatch","action","GenratedScript","useContext","textJson","setTextJson","textScript","setTextScript","timeId","useRef","current","clearTimeout","setTimeout","className","CheckBoxes","onChange","label","name","checked","htmlFor","RouterReducer","router","newState","payload","banner","console","eraseInterface","update","routerInterface","createNewInterface","updateDhcp","dhcp_id","interface_id","dhcp_inter","log","deleteDhcp","BasicRouterConfig","placeholder","e","target","useForm","initialState","formulario","setFormulario","newValue","campo","clearFormulario","f","Object","keys","map","idx","InputUseForm","placeHolder","DhcpConfig","id_interface","id_dhcp","dhcpInter","join","excludedAdds","split","cosa","trim","keyGenerator","Interface","id","routerInter","setType","ipMas","ipAdd","descriptionForm","initial","state","setState","useToggle","isFemale","toggleIsFemale","cableInter","config","onClick","next","InterfaceConfig","divRef","ref","inter","RouterConfiguration","RouterConfigurationScreen","routerConfigParameters","updateRouter","useReducer","Provider","RouterApp","allRouters","setAllRouters","r","list","newList","entries","newRouter","newKey","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53e6430a.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\n\r\nexport function useLocalStorage<T>(key: string, defaultValue: T) {\r\n\treturn useStorage(key, defaultValue, window.localStorage);\r\n}\r\nexport function useSessionStorage<T>(key: string, defaultValue: T) {\r\n\treturn useStorage(key, defaultValue, window.sessionStorage);\r\n}\r\n\r\nfunction useStorage<T>(\r\n\tkey: string,\r\n\tdefaultValue: T,\r\n\tstorageObject: Storage\r\n): [T | undefined, (v: T) => void, () => void] {\r\n\tconst [value, setValue] = useState<T | undefined>(() => {\r\n\t\tconst jsonValue = storageObject.getItem(key);\r\n\t\tif (jsonValue !== null) return JSON.parse(jsonValue) as T;\r\n\t\treturn defaultValue;\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (value === undefined) return storageObject.removeItem(key);\r\n\t\tstorageObject.setItem(key, JSON.stringify(value));\r\n\t}, [key, value, storageObject]);\r\n\r\n\tconst removeValue = useCallback(() => {\r\n\t\tsetValue(undefined);\r\n\t\tstorageObject.removeItem(key);\r\n\t}, []);\r\n\r\n\treturn [value, setValue, removeValue];\r\n}\r\n","export function* keyGeneratorFunc() {\r\n\tfor (let i = 0; ; i++) yield i.toString();\r\n}\r\n","import {\r\n\tRouterInterface,\r\n\tDHCPConfiguration,\r\n\tRouter,\r\n} from \"../types/redes-types\";\r\n\r\nexport const emptyRouterConfiguration: Router = {\r\n\thostname: \"\",\r\n\tinterfaces: {},\r\n\tsecurity: {\r\n\t\tbannerMord: \"\",\r\n\t\tencription: false,\r\n\t\tlineConsole: false,\r\n\t\tvty: false,\r\n\t},\r\n};\r\n\r\nexport const emptyRouterInterface: RouterInterface = {\r\n\tdescription: \"\",\r\n\tinterfaceCableType: {\r\n\t\ttype: \"fastethernet\",\r\n\t\tport: \"\",\r\n\t},\r\n\tipAddress: \"\",\r\n\tipMask: \"\",\r\n\tdhcp: {},\r\n};\r\n\r\nexport const emptyDhcpConfiguration: DHCPConfiguration = {\r\n\tdefaultRouter: \"\",\r\n\tdnsServer: \"\",\r\n\texcluded: [],\r\n\tnetwork: \"\",\r\n\tpoolName: \"\",\r\n};\r\n","import { emptyRouterInterface } from \"../utils/emptyInterfaces\";\r\nimport {\r\n\tDHCPConfiguration,\r\n\tRouter,\r\n\tRouterInterface,\r\n} from \"../types/redes-types\";\r\n\r\nexport enum RouterItemConfigurable {\r\n\thostname,\r\n\tbanner,\r\n\tvty,\r\n\tconsole,\r\n\tencription,\r\n\teraseInterface,\r\n\tupdate,\r\n\tcreateNewInterface,\r\n\tdeleteDhcp,\r\n\tupdateDhcp,\r\n}\r\n\r\nexport type RouterActions =\r\n\t| {\r\n\t\t\ttype: RouterItemConfigurable.hostname;\r\n\t\t\tpayload: string;\r\n\t  }\r\n\t| {\r\n\t\t\ttype: RouterItemConfigurable.deleteDhcp;\r\n\t\t\tpayload: {\r\n\t\t\t\tinterface_id: string;\r\n\t\t\t\tdhcp_id: string;\r\n\t\t\t};\r\n\t  }\r\n\t| {\r\n\t\t\ttype: RouterItemConfigurable.updateDhcp;\r\n\t\t\tpayload: {\r\n\t\t\t\tinterface_id: string;\r\n\t\t\t\tdhcp_id: string;\r\n\t\t\t\tdhcp_inter: DHCPConfiguration;\r\n\t\t\t};\r\n\t  }\r\n\t| {\r\n\t\t\ttype: RouterItemConfigurable.banner;\r\n\t\t\tpayload: string;\r\n\t  }\r\n\t| {\r\n\t\t\ttype: RouterItemConfigurable.vty;\r\n\t\t\tpayload: boolean;\r\n\t  }\r\n\t| {\r\n\t\t\ttype: RouterItemConfigurable.console;\r\n\t\t\tpayload: boolean;\r\n\t  }\r\n\t| {\r\n\t\t\ttype: RouterItemConfigurable.encription;\r\n\t\t\tpayload: boolean;\r\n\t  }\r\n\t| {\r\n\t\t\ttype: RouterItemConfigurable.eraseInterface;\r\n\t\t\tpayload: {\r\n\t\t\t\tkey: string;\r\n\t\t\t};\r\n\t  }\r\n\t| {\r\n\t\t\ttype: RouterItemConfigurable.createNewInterface;\r\n\t\t\tpayload: {\r\n\t\t\t\tkey: string;\r\n\t\t\t};\r\n\t  }\r\n\t| {\r\n\t\t\ttype: RouterItemConfigurable.update;\r\n\t\t\tpayload: {\r\n\t\t\t\tkey: string;\r\n\t\t\t\trouterInterface: RouterInterface;\r\n\t\t\t};\r\n\t  };\r\n\r\nexport const RouterReducer = (\r\n\trouter: Router,\r\n\taction: RouterActions\r\n): Router => {\r\n\tlet newState: typeof router;\r\n\r\n\tswitch (action.type) {\r\n\t\tcase RouterItemConfigurable.hostname:\r\n\t\t\treturn { ...router, hostname: action.payload };\r\n\t\tcase RouterItemConfigurable.banner:\r\n\t\t\tnewState = { ...router };\r\n\t\t\tnewState.security.bannerMord = action.payload;\r\n\t\t\treturn newState;\r\n\t\tcase RouterItemConfigurable.vty:\r\n\t\t\tnewState = { ...router };\r\n\t\t\tnewState.security.vty = action.payload;\r\n\t\t\treturn newState;\r\n\t\tcase RouterItemConfigurable.console:\r\n\t\t\tnewState = { ...router };\r\n\t\t\tnewState.security.lineConsole = action.payload;\r\n\t\t\treturn newState;\r\n\t\tcase RouterItemConfigurable.encription:\r\n\t\t\tnewState = { ...router };\r\n\t\t\tnewState.security.encription = action.payload;\r\n\t\t\treturn newState;\r\n\t\tcase RouterItemConfigurable.eraseInterface:\r\n\t\t\tnewState = { ...router };\r\n\t\t\tdelete newState.interfaces[action.payload.key];\r\n\t\t\treturn newState;\r\n\r\n\t\tcase RouterItemConfigurable.update: {\r\n\t\t\tnewState = { ...router };\r\n\r\n\t\t\tconst { key, routerInterface } = action.payload;\r\n\r\n\t\t\tnewState.interfaces[key] = routerInterface;\r\n\r\n\t\t\treturn newState;\r\n\t\t}\r\n\t\tcase RouterItemConfigurable.createNewInterface: {\r\n\t\t\tnewState = { ...router };\r\n\r\n\t\t\tconst { key } = action.payload;\r\n\r\n\t\t\tnewState.interfaces[key] = { ...emptyRouterInterface };\r\n\r\n\t\t\treturn newState;\r\n\t\t}\r\n\t\tcase RouterItemConfigurable.updateDhcp: {\r\n\t\t\tconst { dhcp_id, interface_id, dhcp_inter } = action.payload;\r\n\r\n\t\t\tnewState = { ...router };\r\n\t\t\tconsole.log(\"Estoy añadiendo una\");\r\n\r\n\t\t\tif (!newState.interfaces?.[interface_id]) return router;\r\n\r\n\t\t\tnewState.interfaces[interface_id].dhcp[dhcp_id] = dhcp_inter;\r\n\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\tcase RouterItemConfigurable.deleteDhcp: {\r\n\t\t\tconst { dhcp_id, interface_id } = action.payload;\r\n\r\n\t\t\tnewState = { ...router };\r\n\r\n\t\t\tdelete newState.interfaces[interface_id].dhcp[dhcp_id];\r\n\r\n\t\t\treturn newState;\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn router;\r\n\t}\r\n};\r\n","import { createContext } from \"react\";\r\nimport { RouterActions } from \"../reducers/RouterConfigReducer\";\r\nimport { Router } from \"../types/redes-types\";\r\nimport { emptyRouterConfiguration } from \"../utils/emptyInterfaces\";\r\n\r\nexport const RouterConfigContext = createContext<{\r\n\trouterConfig: Router;\r\n\tdispatch: (action: RouterActions) => void;\r\n}>({\r\n\trouterConfig: emptyRouterConfiguration,\r\n\tdispatch: (action: RouterActions) => {},\r\n});\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { RouterConfigContext } from \"../context/ReactConfigContext\";\r\nimport { router2script } from \"../utils/router2script\";\r\n\r\nexport const GenratedScript = () => {\r\n\tconst { routerConfig } = useContext(RouterConfigContext);\r\n\r\n\tconst [textJson, setTextJson] = useState(\"\");\r\n\tconst [textScript, setTextScript] = useState(\"Todavía nada\");\r\n\tconst timeId = useRef<NodeJS.Timeout | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\ttimeId.current && clearTimeout(timeId.current);\r\n\r\n\t\ttimeId.current = setTimeout(() => {\r\n\t\t\tsetTextJson(JSON.stringify(routerConfig, null, 2));\r\n\t\t\tsetTextScript(router2script(routerConfig));\r\n\t\t}, 1000);\r\n\t}, [routerConfig]);\r\n\r\n\treturn (\r\n\t\t<p className=\"container mt-2\">\r\n\t\t\t<h2 className=\"text-center\">Script de {routerConfig.hostname || \"\"}</h2>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<h3 className=\"col-5\">JSON generado </h3>\r\n\t\t\t\t<h3 className=\"col-7\">Script generado </h3>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<pre className=\"col-4 text-break \">{textJson}</pre>\r\n\t\t\t\t<pre className=\"col-7 text-break\">{textScript}</pre>\r\n\t\t\t</div>\r\n\t\t</p>\r\n\t);\r\n};\r\n","import { Router } from \"../types/redes-types\";\r\n\r\nexport const router2script = (router: Router): string => {\r\n\treturn \"Todavia no funciona nada\";\r\n};\r\n","import { FC } from \"react\";\r\n\r\ninterface props {\r\n\tlabel: string;\r\n\tvalue: boolean;\r\n\tonChange: () => void;\r\n\tname: string;\r\n}\r\n\r\nexport const CheckBoxes: FC<props> = ({ onChange, label, value, name }) => {\r\n\treturn (\r\n\t\t<div className=\"form-check\">\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"form-check-input\"\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tchecked={value}\r\n\t\t\t\tname={name}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t/>\r\n\t\t\t<label className=\"form-check-label\" htmlFor={name}>\r\n\t\t\t\t{label}\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { RouterConfigContext } from \"../context/ReactConfigContext\";\r\nimport { CheckBoxes } from \"./CheckBoxes\";\r\nimport { RouterItemConfigurable } from \"../reducers/RouterConfigReducer\";\r\nexport const BasicRouterConfig = () => {\r\n\tconst { routerConfig, dispatch } = useContext(RouterConfigContext);\r\n\r\n\tconst { hostname, security } = routerConfig;\r\n\r\n\tconst { bannerMord, encription, lineConsole, vty } = security;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>Configuración básica</h3>\r\n\t\t\t<div className=\"col col-6\">\r\n\t\t\t\t<label htmlFor=\"hostname\" className=\"form-label\">\r\n\t\t\t\t\tPoner el hostname\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tname=\"hostname\"\r\n\t\t\t\t\tplaceholder=\"Hostname del router\"\r\n\t\t\t\t\tvalue={hostname}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: RouterItemConfigurable.hostname,\r\n\t\t\t\t\t\t\tpayload: e.target.value,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor=\"banner\" className=\"form-label\">\r\n\t\t\t\t\tPoner el banner\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tname=\"banner\"\r\n\t\t\t\t\tplaceholder=\"banner del router\"\r\n\t\t\t\t\tvalue={bannerMord}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: RouterItemConfigurable.banner,\r\n\t\t\t\t\t\t\tpayload: e.target.value,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t{/* Chekc boxes */}\r\n\r\n\t\t\t<div className=\"col col-6\">\r\n\t\t\t\t<CheckBoxes\r\n\t\t\t\t\tlabel={\"Tiene encription\"}\r\n\t\t\t\t\tname={\"encription\"}\r\n\t\t\t\t\tvalue={encription}\r\n\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: RouterItemConfigurable.encription,\r\n\t\t\t\t\t\t\tpayload: !encription,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<CheckBoxes\r\n\t\t\t\t\tlabel={\"Tiene line console security\"}\r\n\t\t\t\t\tname={\"lineconsole\"}\r\n\t\t\t\t\tvalue={lineConsole}\r\n\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: RouterItemConfigurable.console,\r\n\t\t\t\t\t\t\tpayload: !lineConsole,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<CheckBoxes\r\n\t\t\t\t\tlabel={\"Tiene vty\"}\r\n\t\t\t\t\tname={\"vty\"}\r\n\t\t\t\t\tvalue={vty}\r\n\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: RouterItemConfigurable.vty,\r\n\t\t\t\t\t\t\tpayload: !vty,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = <T extends Object>(initialState: T) => {\r\n\tconst [formulario, setFormulario] = useState<T>(initialState);\r\n\r\n\tconst onChange = (newValue: string, campo: keyof T) => {\r\n\t\tsetFormulario({\r\n\t\t\t...formulario,\r\n\t\t\t[campo]: newValue,\r\n\t\t});\r\n\t};\r\n\r\n\tconst clearFormulario = () => {\r\n\t\tsetFormulario((f) => {\r\n\t\t\tObject.keys(f).map((key, idx) => {\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tf[key] = \"\";\r\n\t\t\t});\r\n\t\t\treturn f;\r\n\t\t});\r\n\t};\r\n\r\n\treturn {\r\n\t\t...formulario,\r\n\t\tformulario,\r\n\t\tonChange,\r\n\t\tclearFormulario,\r\n\t};\r\n};\r\n\r\n/** Example\r\n * export const Formularios = () => {\r\n\tconst { email, password, onChange, formulario } = useForm({\r\n\t\tpassword: \"871984\",\r\n\t\temail: \"josifj@uiwfh.com\",\r\n\t});\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>Formularios</h3>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"form-control my-2\"\r\n\t\t\t\tplaceholder=\"Tu password\"\r\n\t\t\t\tvalue={password}\r\n\t\t\t\tonChange={(e) => onChange(e.target.value, \"password\")}\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"email\"\r\n\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\tplaceholder=\"Tu email\"\r\n\t\t\t\tvalue={email}\r\n\t\t\t\tonChange={(e) => onChange(e.target.value, \"email\")}\r\n\t\t\t/>\r\n\t\t\t<p>\r\n\t\t\t\t<pre>{JSON.stringify(formulario)}</pre>\r\n\t\t\t</p>\r\n\t\t</>\r\n\t);\r\n};\r\n * \r\n * \r\n */\r\n","import React, { FC } from \"react\";\r\n\r\ninterface Props {\r\n\tname: string;\r\n\tlabel: string;\r\n\tplaceHolder: string;\r\n\tvalue: string;\r\n\tonChange: Function;\r\n}\r\n\r\nexport const InputUseForm: FC<Props> = ({\r\n\tname,\r\n\tlabel,\r\n\tplaceHolder,\r\n\tvalue,\r\n\tonChange,\r\n}) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<label htmlFor={name} className=\"form-label\">\r\n\t\t\t\t{label}\r\n\t\t\t</label>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\tname={name}\r\n\t\t\t\tplaceholder={placeHolder}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tonChange(e.target.value, name);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React, { FC, useContext, useEffect } from \"react\";\r\nimport { DHCPConfiguration } from \"../types/redes-types\";\r\nimport { useForm } from \"../hooks/useForm\";\r\nimport { InputUseForm } from \"./InputUseForm\";\r\nimport { RouterConfigContext } from \"../context/ReactConfigContext\";\r\nimport { RouterItemConfigurable } from \"../reducers/RouterConfigReducer\";\r\n\r\ninterface Props {\r\n\tid_interface: string;\r\n\tdhcpInter: DHCPConfiguration;\r\n\tid_dhcp: string;\r\n}\r\n\r\nexport const DhcpConfig: FC<Props> = ({ id_interface, id_dhcp, dhcpInter }) => {\r\n\tconst { dispatch } = useContext(RouterConfigContext);\r\n\r\n\tconst {\r\n\t\tdefaultRouter,\r\n\t\tdnsServer,\r\n\t\tnetwork,\r\n\t\tpoolName,\r\n\t\texcluded,\r\n\t\tformulario,\r\n\t\tonChange,\r\n\t} = useForm({\r\n\t\tnetwork: dhcpInter.network,\r\n\t\tdefaultRouter: dhcpInter.defaultRouter,\r\n\t\tdnsServer: dhcpInter.dnsServer,\r\n\t\tpoolName: dhcpInter.poolName,\r\n\t\texcluded: dhcpInter.excluded.join(\",\"),\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tconst excludedAdds = formulario.excluded\r\n\t\t\t.split(\",\")\r\n\t\t\t.map((cosa) => cosa.trim());\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: RouterItemConfigurable.updateDhcp,\r\n\t\t\tpayload: {\r\n\t\t\t\tdhcp_id: id_dhcp,\r\n\t\t\t\tinterface_id: id_interface,\r\n\t\t\t\tdhcp_inter: {\r\n\t\t\t\t\tnetwork,\r\n\t\t\t\t\tdefaultRouter,\r\n\t\t\t\t\tdnsServer,\r\n\t\t\t\t\tpoolName,\r\n\t\t\t\t\texcluded: excludedAdds,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\t}, [\r\n\t\tdefaultRouter,\r\n\t\tdispatch,\r\n\t\tdnsServer,\r\n\t\texcluded,\r\n\t\tnetwork,\r\n\t\tpoolName,\r\n\t\tid_dhcp,\r\n\t\tid_interface,\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h5>DHCP Configuration {`DHCP::${poolName}` ?? \"\"}</h5>\r\n\t\t\t<div className=\"dhcp-config-form\">\r\n\t\t\t\t<InputUseForm\r\n\t\t\t\t\tlabel=\"Pon el nombre del pool name\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={poolName}\r\n\t\t\t\t\tplaceHolder={\"Pon el poolName\"}\r\n\t\t\t\t\tname={\"poolName\"}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputUseForm\r\n\t\t\t\t\tlabel=\"Pon el default router\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={defaultRouter}\r\n\t\t\t\t\tplaceHolder={\"Pon el defaultRouter\"}\r\n\t\t\t\t\tname={\"defaultRouter\"}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputUseForm\r\n\t\t\t\t\tlabel=\"Pon la ip del dnsServer\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={dnsServer}\r\n\t\t\t\t\tplaceHolder={\"Pon el dnsServer\"}\r\n\t\t\t\t\tname={\"dnsServer\"}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputUseForm\r\n\t\t\t\t\tlabel=\"Pon la ip del network\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={network}\r\n\t\t\t\t\tplaceHolder={\"Pon el network\"}\r\n\t\t\t\t\tname={\"network\"}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<InputUseForm\r\n\t\t\t\t\tlabel=\"Pon las ip excluidas, separadas por commas\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={excluded}\r\n\t\t\t\t\tplaceHolder={\"Pon el excluded\"}\r\n\t\t\t\t\tname={\"excluded\"}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { useState, useContext } from \"react\";\r\nimport { CheckBoxes } from \"./CheckBoxes\";\r\nimport { useForm } from \"../hooks/useForm\";\r\nimport { useEffect } from \"react\";\r\nimport { RouterConfigContext } from \"../context/ReactConfigContext\";\r\nimport { RouterItemConfigurable } from \"../reducers/RouterConfigReducer\";\r\nimport { RouterInterface, RouterInterfaceCables } from \"../types/redes-types\";\r\nimport { useToggle } from \"../hooks/useToggle\";\r\nimport { DhcpConfig } from \"./DhcpConfig\";\r\nimport { InputUseForm } from \"./InputUseForm\";\r\nimport { keyGeneratorFunc } from \"../utils/keyGenerator\";\r\nimport { emptyDhcpConfiguration } from \"../utils/emptyInterfaces\";\r\n\r\ntype CableTypes = \"serial\" | \"fastethernet\" | \"gigabitethernet\";\r\n\r\nconst keyGenerator = keyGeneratorFunc();\r\n\r\nexport const Interface: FC<{ id: string; routerInter: RouterInterface }> = ({\r\n\tid,\r\n\trouterInter,\r\n}) => {\r\n\tconst { description, interfaceCableType, ipMask, ipAddress, dhcp } =\r\n\t\trouterInter;\r\n\r\n\tconst { dispatch } = useContext(RouterConfigContext);\r\n\r\n\tconst [type, setType] = useState(interfaceCableType.type);\r\n\r\n\tconst { onChange, ipAdd, ipMas, descriptionForm, port } = useForm({\r\n\t\tipMas: ipMask,\r\n\t\tipAdd: ipAddress,\r\n\t\tport: interfaceCableType.port,\r\n\t\tdescriptionForm: description,\r\n\t});\r\n\r\n\tconst [isFemale, toggleIsFemale] = useToggle(\r\n\t\tinterfaceCableType.type === \"serial\" && interfaceCableType.isFemale\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst cableInter: RouterInterfaceCables =\r\n\t\t\ttype === \"serial\"\r\n\t\t\t\t? {\r\n\t\t\t\t\t\ttype: \"serial\",\r\n\t\t\t\t\t\tisFemale,\r\n\t\t\t\t\t\tport,\r\n\t\t\t\t  }\r\n\t\t\t\t: {\r\n\t\t\t\t\t\ttype,\r\n\r\n\t\t\t\t\t\tport,\r\n\t\t\t\t  };\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: RouterItemConfigurable.update,\r\n\t\t\tpayload: {\r\n\t\t\t\tkey: id,\r\n\t\t\t\trouterInterface: {\r\n\t\t\t\t\t...routerInter,\r\n\t\t\t\t\tdescription: descriptionForm,\r\n\t\t\t\t\tinterfaceCableType: cableInter,\r\n\t\t\t\t\tipAddress: ipAdd,\r\n\t\t\t\t\tipMask: ipMas,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\t}, [isFemale, descriptionForm, dispatch, id, ipAdd, ipMas, port, type]);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<h4 className=\"text-center\">Configuración para {descriptionForm}</h4>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-6\">\r\n\t\t\t\t\t<strong>Select Type of cable</strong>\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tclassName=\"form-select\"\r\n\t\t\t\t\t\taria-label=\"Default select example\"\r\n\t\t\t\t\t\tvalue={type}\r\n\t\t\t\t\t\tonChange={(e) => setType(e.target.value as CableTypes)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value={\"fastethernet\"}>Fast Ethernet</option>\r\n\t\t\t\t\t\t<option value={\"serial\"}>Serial </option>\r\n\t\t\t\t\t\t<option value={\"gigabitethernet\"}>Gigabit</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t{type === \"serial\" && (\r\n\t\t\t\t\t\t<CheckBoxes\r\n\t\t\t\t\t\t\tlabel=\"Es hembra?\"\r\n\t\t\t\t\t\t\tvalue={isFemale}\r\n\t\t\t\t\t\t\tname=\"es-hembra\"\r\n\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\ttoggleIsFemale();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-6\">\r\n\t\t\t\t\t<InputUseForm\r\n\t\t\t\t\t\tlabel=\"Pon el port number\"\r\n\t\t\t\t\t\tname=\"port\"\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tplaceHolder=\"Port number\"\r\n\t\t\t\t\t\tvalue={port}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<InputUseForm\r\n\t\t\t\t\t\tlabel=\"Pon el description\"\r\n\t\t\t\t\t\tname=\"descriptionForm\"\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tplaceHolder=\"description\"\r\n\t\t\t\t\t\tvalue={descriptionForm}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<strong>Ip address</strong> <br />\r\n\t\t\t<small>Pones la direccion normal y luego pones diagonal algo</small>\r\n\t\t\t<div className=\"input-group\">\r\n\t\t\t\t<div className=\"col-9\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control col-9\"\r\n\t\t\t\t\t\tname=\"ipAddress\"\r\n\t\t\t\t\t\tplaceholder=\"ipAddress del router\"\r\n\t\t\t\t\t\tvalue={ipAdd}\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tonChange(e.target.value, \"ipAdd\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<span className=\"input-group-text\">/</span>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tname=\"ipMask\"\r\n\t\t\t\t\tplaceholder=\"ex. 24\"\r\n\t\t\t\t\tvalue={ipMas}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tonChange(e.target.value, \"ipMas\");\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"dhcp-config-container mt-4\">\r\n\t\t\t\t{Object.keys(dhcp).map((key) => {\r\n\t\t\t\t\tconst config = dhcp[key];\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={key}>\r\n\t\t\t\t\t\t\t<DhcpConfig id_dhcp={key} id_interface={id} dhcpInter={config} />\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-danger col-4 offset-8 mt-2\"\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\t\ttype: RouterItemConfigurable.deleteDhcp,\r\n\t\t\t\t\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\t\t\t\t\tdhcp_id: key,\r\n\t\t\t\t\t\t\t\t\t\t\tinterface_id: id,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tDelete dhcp\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-success\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: RouterItemConfigurable.updateDhcp,\r\n\t\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\t\tdhcp_id: keyGenerator?.next()?.value ?? \"1\",\r\n\t\t\t\t\t\t\t\tinterface_id: id,\r\n\t\t\t\t\t\t\t\tdhcp_inter: emptyDhcpConfiguration,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tAdd new dhcp\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useToggle = (initial: boolean = false): [boolean, () => void] => {\r\n\tconst [state, setState] = useState(initial);\r\n\r\n\tconst toggle = () => {\r\n\t\tsetState(!state);\r\n\t};\r\n\r\n\treturn [state, toggle];\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { Interface } from \"./Interface\";\r\nimport { useContext } from \"react\";\r\nimport { RouterConfigContext } from \"../context/ReactConfigContext\";\r\nimport { RouterItemConfigurable } from \"../reducers/RouterConfigReducer\";\r\nimport { keyGeneratorFunc } from \"../utils/keyGenerator\";\r\n\r\nconst keyGenerator = keyGeneratorFunc();\r\n\r\nexport const InterfaceConfig = () => {\r\n\tconst { routerConfig, dispatch } = useContext(RouterConfigContext);\r\n\r\n\tconst divRef = useRef<null | HTMLDivElement>(null);\r\n\r\n\tconst handleAdding = () => {\r\n\t\tconst key = (keyGenerator?.next()?.value as string) ?? \"1\";\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: RouterItemConfigurable.createNewInterface,\r\n\t\t\tpayload: {\r\n\t\t\t\tkey,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>Configuración de las interfaces</h3>\r\n\t\t\t<div className=\"interfaces\" ref={divRef}>\r\n\t\t\t\t{Object.keys(routerConfig.interfaces).map((key) => {\r\n\t\t\t\t\tconst inter = routerConfig.interfaces[key];\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={key} className=\"interface row\">\r\n\t\t\t\t\t\t\t<div className=\"my-1\">\r\n\t\t\t\t\t\t\t\t<Interface id={key} routerInter={inter} />\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger col-4 offset-8\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\t\t\ttype: RouterItemConfigurable.eraseInterface,\r\n\t\t\t\t\t\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey,\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tEliminar {inter.description || \"Interface\"}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"btn btn-success col-6 offset-3 mt-2\"\r\n\t\t\t\tonClick={handleAdding}\r\n\t\t\t>\r\n\t\t\t\tAdd interface\r\n\t\t\t</button>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { BasicRouterConfig } from \"./BasicRouterConfig\";\r\nimport { InterfaceConfig } from \"./InterfaceConfig\";\r\n\r\nexport const RouterConfiguration = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<BasicRouterConfig />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<InterfaceConfig />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React, { useReducer, FC, useEffect } from \"react\";\r\nimport { GenratedScript } from \"./GenratedScript\";\r\nimport { RouterConfiguration } from \"./RouterConfiguration\";\r\n\r\nimport { RouterConfigContext } from \"../context/ReactConfigContext\";\r\nimport { RouterReducer } from \"../reducers/RouterConfigReducer\";\r\n\r\nimport { Router } from \"../types/redes-types\";\r\nimport { useSessionStorage } from \"../hooks/useLocalStorage\";\r\nimport { emptyRouterConfiguration } from \"../utils/emptyInterfaces\";\r\n\r\ninterface Props {\r\n\trouterConfigParameters: Router;\r\n\tupdateRouter: (key: string, r: Router) => void;\r\n\tid: string;\r\n}\r\n// Missing clean up\r\n\r\nexport const RouterConfigurationScreen: FC<Props> = ({\r\n\trouterConfigParameters,\r\n\tupdateRouter,\r\n\tid,\r\n}) => {\r\n\tconst [value, setValue, removeValue] = useSessionStorage(\r\n\t\t`router_${id}`,\r\n\t\trouterConfigParameters\r\n\t);\r\n\r\n\tconst [routerConfig, dispatch] = useReducer(\r\n\t\tRouterReducer,\r\n\t\tvalue || emptyRouterConfiguration\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetValue(routerConfig);\r\n\t}, [routerConfig, setValue]);\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tremoveValue();\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<RouterConfigContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\trouterConfig,\r\n\t\t\t\tdispatch,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div className=\"container mb-5 px-5\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<b>¿Como usarlo?</b> <br /> Puedes usar la configuracion llenando la\r\n\t\t\t\t\tinformacion necesaria en las siguientes partes\r\n\t\t\t\t</p>\r\n\t\t\t\t<h2 className=\"text-center\">\r\n\t\t\t\t\tConfiguracion de {`Router::${routerConfig.hostname}` || \"router\"}\r\n\t\t\t\t</h2>\r\n\t\t\t\t<RouterConfiguration />\r\n\t\t\t\t<GenratedScript />\r\n\t\t\t</div>\r\n\t\t</RouterConfigContext.Provider>\r\n\t);\r\n};\r\n","import React, { useEffect, useReducer, useState } from \"react\";\r\nimport { useSessionStorage } from \"../hooks/useLocalStorage\";\r\nimport { Router } from \"../types/redes-types\";\r\nimport { keyGeneratorFunc } from \"../utils/keyGenerator\";\r\nimport { RouterConfigurationScreen } from \"./RouterConfigurationScreen\";\r\nimport { emptyRouterConfiguration } from \"../utils/emptyInterfaces\";\r\nimport { ListRouterReducer } from \"../reducers/ListRouterReducer\";\r\n\r\nconst keyGenerator = keyGeneratorFunc();\r\n\r\ntype ListOfRouters = {\r\n\t[key: string]: Router;\r\n};\r\n\r\nexport const RouterApp = () => {\r\n\tconst [value, setValue] = useSessionStorage<ListOfRouters>(\r\n\t\t\"routerConfig\",\r\n\t\t{}\r\n\t);\r\n\r\n\tconst [allRouters, setAllRouters] = useState<ListOfRouters>(value ?? {});\r\n\r\n\tconst updateRouter = (key: string, r: Router) => {\r\n\t\tsetAllRouters((list) => {\r\n\t\t\tconst newList = { ...list };\r\n\t\t\tnewList[key] = r;\r\n\t\t\treturn newList;\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetValue(allRouters);\r\n\t\tconsole.log(\"Algo se esta cambiando\");\r\n\t}, [allRouters, setValue]);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t{Object.entries(allRouters).map(([key, router]) => {\r\n\t\t\t\tconsole.log(\"Debería anadir un router aqui\");\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"container my-3\" key={key}>\r\n\t\t\t\t\t\t<RouterConfigurationScreen\r\n\t\t\t\t\t\t\trouterConfigParameters={router}\r\n\t\t\t\t\t\t\tid={key}\r\n\t\t\t\t\t\t\tupdateRouter={updateRouter}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"btn btn-danger col-4 offset-4\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetAllRouters((r) => {\r\n\t\t\t\t\t\t\t\t\tconst newRouter = { ...r };\r\n\t\t\t\t\t\t\t\t\tdelete newRouter[key];\r\n\t\t\t\t\t\t\t\t\treturn newRouter;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDelete {router.hostname || \"Router\"}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"btn btn-success col-10 offset-1 mb-5\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tlet newKey = \"\";\r\n\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tnewKey = (keyGenerator.next()?.value ?? \"1\") as string;\r\n\t\t\t\t\t} while (allRouters[newKey]);\r\n\r\n\t\t\t\t\tsetAllRouters({ ...allRouters, [newKey]: emptyRouterConfiguration });\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tAdd Router\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { RouterApp } from \"./components/RouterApp\";\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<RouterApp />\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\n\nimport App from \"./App\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}